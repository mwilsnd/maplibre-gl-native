load("@build_bazel_rules_apple//apple:apple.bzl", "apple_static_xcframework", "apple_xcframework", "local_provisioning_profile")
load("@build_bazel_rules_apple//apple:ios.bzl", "ios_application", "ios_framework")
load("@build_bazel_rules_apple//apple:resources.bzl", "apple_resource_bundle")
load("//bazel:flags.bzl", "CPP_FLAGS", "MAPLIBRE_FLAGS", "WARNING_FLAGS")
load(
    "@rules_xcodeproj//xcodeproj:defs.bzl",
    "top_level_target",
    "xcode_provisioning_profile",
    "xcodeproj",
    "xcode_schemes",
)
load("bazel/macros.bzl", "info_plist")
load("bazel/config.bzl", "APPLE_MOBILE_PROVISIONING_PROFILE_TEAM_ID")
load("bazel/files.bzl",
    "MLN_IOS_PUBLIC_SOURCE",
    "MLN_IOS_PUBLIC_HEADERS",
    "MLN_IOS_PRIVATE_HEADERS",
    "MLN_PUBLIC_OBJC_SOURCE",
    "MLN_DARWIN_INCLUDES",
)

apple_static_xcframework(
    name = "Mapbox.static",
    bundle_name = "Mapbox",
    ios = {
        "simulator": [
            "x86_64",
            "arm64",
        ],
        "device": ["arm64"],
    },
    minimum_os_versions = {"ios": "12.0"},
    public_hdrs = MLN_IOS_PUBLIC_SOURCE,
    umbrella_header = "src/Mapbox.h",
    visibility = ["//visibility:public"],
    deps = ["sdk"],
)

info_plist(
    name = "info_plist",
    out = "Info.plist",
    base_info_plist = "framework/Info.plist",
)

info_plist(
    name = "info_static_plist",
    out = "Info-static.plist",
    base_info_plist = "framework/Info-static.plist",
)

apple_xcframework(
    name = "Mapbox.dynamic",
    bundle_id = "com.maplibre.mapbox",
    bundle_name = "Mapbox",
    data = glob([
        "resources/*.lproj/**",
        "resources/*.xcassets/**",
    ]),
    infoplists = ["info_plist"],
    ios = {
        "simulator": [
            "x86_64",
            "arm64",
        ],
        "device": ["arm64"],
    },
    minimum_os_versions = {"ios": "12.0"},
    public_hdrs = MLN_IOS_PUBLIC_SOURCE,
    umbrella_header = "src/Mapbox.h",
    visibility = ["//visibility:public"],
    deps = ["sdk-dynamic"],
)

ios_framework(
    name = "MapLibre.link",
    bundle_id = "com.maplibre.link",
    families = ["iphone"],
    infoplists = ["info_plist"],
    linkopts = [""],
    minimum_os_version = "12.0",
    deps = ["sdk"],
)

# sdk for the static target which includes the resources.
objc_library(
    name = "sdk",
    hdrs = MLN_IOS_PUBLIC_SOURCE,
    data = ["resources"],
    module_name = "MapLibre",
    sdk_dylibs = [
        "libz",
        "libsqlite3",
        "libc++",
    ],
    sdk_frameworks = [
        "MobileCoreServices",
        "Security",
        "WebKit",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "objc-sdk",
        "objcpp-sdk",
    ],
)

# sdk for the dynamic target. Lacking the resources bundle since for dynamic
# they are in the main package.
objc_library(
    name = "sdk-dynamic",
    sdk_dylibs = [
        "libz",
        "libsqlite3",
        "libc++",
    ],
    sdk_frameworks = [
        "MobileCoreServices",
        "Security",
        "WebKit",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "objc-sdk",
        "objcpp-sdk",
    ],
)

apple_resource_bundle(
    name = "resources",
    bundle_id = "com.maplibre.mapbox",
    bundle_name = "Mapbox",
    infoplists = ["info_static_plist"],
    resources = glob([
        "resources/*.lproj/**",
        "resources/*.xcassets/**",
    ]),
)

# Objcpp files for the iOS source
objc_library(
    name = "objcpp-sdk",
    srcs = MLN_IOS_PUBLIC_SOURCE + ["//platform/darwin:generated_code"],
    copts = CPP_FLAGS + MAPLIBRE_FLAGS + [
        "-fcxx-modules",
        "-fmodules",
        "-Wno-c99-extensions",
        "-Wno-gnu-zero-variadic-macro-arguments",
        "-Wno-gnu-conditional-omitted-operand",
        "-Wno-gnu-statement-expression",
    ],
    hdrs = MLN_DARWIN_INCLUDES,
    sdk_frameworks = [
        "CoreImage",
        "CoreLocation",
        "GLKit",
        "OpenGLES",
        "QuartzCore",
    ],
    defines = ["GLES_SILENCE_DEPRECATION=1"],
    deps = [
        "objc-headers",
        "//:mbgl-core",
        "//platform/darwin:darwin-objcpp",
        "//platform/default:mbgl-default",
        "//platform/ios/vendor:SMCalloutView",
    ],
)

# platform/ios/sdk-files.json
# Objc files for the iOS source
objc_library(
    name = "objc-sdk",
    srcs = MLN_PUBLIC_OBJC_SOURCE,
    hdrs = MLN_DARWIN_INCLUDES,
    copts = WARNING_FLAGS["ios"] + MAPLIBRE_FLAGS + [
        "-fmodules",
        "-Wno-gnu-zero-variadic-macro-arguments",
        "-Wno-variadic-macros",
        "-Wno-gnu-conditional-omitted-operand",
    ],
    deps = [
        "objc-headers",
        "//:mbgl-core",
        "//platform/darwin:darwin-objc",
        "//platform/default:mbgl-default",
        "//platform/ios/vendor:SMCalloutView",
    ],
)

# Common headers between objc and objcpp libraries.
objc_library(
    name = "objc-headers",
    srcs = MLN_IOS_PUBLIC_HEADERS + MLN_IOS_PRIVATE_HEADERS + ["//platform/darwin:generated_code"],
    hdrs = MLN_IOS_PUBLIC_HEADERS + MLN_IOS_PRIVATE_HEADERS + ["//platform/darwin:generated_code"],
    sdk_frameworks = [
        "CoreGraphics",
        "CoreLocation",
        "QuartzCore",
    ],
    deps = [
        "//platform/darwin:darwin-objc",
        "//platform/darwin:darwin-objcpp",
    ],
)

objc_library(
    name = "sdk-headers",
    hdrs = MLN_IOS_PUBLIC_HEADERS,
)

objc_library(
    name = "iosapp",
    defines = ["GLES_SILENCE_DEPRECATION"],
    srcs = [
        "//platform/darwin:app/LimeGreenStyleLayer.h",
        "//platform/darwin:app/LimeGreenStyleLayer.m",
        "app/MBXAnnotationView.m",
        "app/MBXAppDelegate.m",
        "app/MBXCustomCalloutView.h",
        "app/MBXCustomCalloutView.m",
        "app/MBXCustomLocationViewController.m",
        "app/MBXEmbeddedMapViewController.m",
        "app/MBXFrameTimeGraphView.m",
        "app/MBXOfflinePacksTableViewController.m",
        "app/MBXOrnamentsViewController.m",
        "app/MBXSnapshotsViewController.m",
        "app/MBXState.m",
        "app/MBXStateManager.m",
        "app/MBXUserLocationAnnotationView.m",
        "app/MBXViewController.m",
        "app/main.m",
    ],
    hdrs = [
        "app/MBXAnnotationView.h",
        "app/MBXAppDelegate.h",
        "app/MBXCustomLocationViewController.h",
        "app/MBXEmbeddedMapViewController.h",
        "app/MBXFrameTimeGraphView.h",
        "app/MBXOfflinePacksTableViewController.h",
        "app/MBXOrnamentsViewController.h",
        "app/MBXSnapshotsViewController.h",
        "app/MBXState.h",
        "app/MBXStateManager.h",
        "app/MBXUserLocationAnnotationView.h",
        "app/MBXViewController.h",
        "app/MLNMapView_Experimental.h",
        "platform/darwin/app/LimeGreenStyleLayer.h",
    ] + MLN_IOS_PUBLIC_HEADERS + MLN_IOS_PRIVATE_HEADERS + ["//platform/darwin:generated_code"],
    data = glob([
        "app/Assets.xcassets/**",
    ]),
    sdk_frameworks = [
        "GLKit",  # needed for LimeGreenStyleLayer
    ],
    deps = [
        "sdk-headers",
    ],
)

_IOS_APPLICATION_RESOURCES = [
    "app/numeric_filter_style.json",
    "app/missing_icon.json",
    "app/points.geojson",
    "app/polyline.geojson",
    "app/Settings.bundle",
    "app/Main.storyboard",
    "app/threestates.geojson",
    "app/LaunchScreen.storyboard",
    "app/simple_route.json",
    "app/fill_filter_style.json",
    "//platform/darwin/test:amsterdam.geojson",
] + glob([
    "app/*.lproj/**",
])

ios_application(
    name = "App",
    bundle_id = "org.maplibre.app",
    families = [
        "iphone",
        "ipad",
    ],
    infoplists = ["build/Info-app.plist"],
    minimum_os_version = "12.0",
    provisioning_profile = "xcode_profile",
    resources = _IOS_APPLICATION_RESOURCES,
    visibility = ["//visibility:public"],
    deps = [
        "iosapp",
        "sdk",
    ],
)

ios_application(
    name = "AppDynamicLib",
    bundle_id = "org.maplibre.app",
    families = [
        "iphone",
        "ipad",
    ],
    frameworks = [
        "MapLibre.link",
    ],
    infoplists = ["app/Info.plist"],
    minimum_os_version = "12.0",
    resources = _IOS_APPLICATION_RESOURCES,
    visibility = ["//visibility:public"],
    provisioning_profile = ":xcode_profile",
    deps = [
        "iosapp",
    ],
)

# Outputs a file with the size of MapLibre as a dynamic library in bytes
genrule(
    name = "size",
    srcs = [
        "AppDynamicLib",
    ],
    outs = [
        "size-out",
    ],
    cmd = """
        unzip $(location AppDynamicLib)
        stat -f%z ./Payload/AppDynamicLib.app/Frameworks/MapLibre.link.framework/MapLibre.link > $@
    """,
)

local_provisioning_profile(
    name = "provisioning_profile",
    profile_name = "iOS Team Provisioning Profile: *",
    team_id = APPLE_MOBILE_PROVISIONING_PROFILE_TEAM_ID,
)

xcode_provisioning_profile(
    name = "xcode_profile",
    managed_by_xcode = True,
    provisioning_profile = ":provisioning_profile",
    visibility = ["//visibility:public"],
)

xcodeproj(
    name = "xcodeproj",
    build_mode = "xcode",
    minimum_xcode_version = "14",
    project_name = "MapLibre",
    tags = ["manual"],
    bazel_env = {"PATH": "/bin:/usr/bin:/usr/local/bin:/opt/homebrew/bin"},
    default_xcode_configuration = "Debug",
    xcode_configurations = {
        "Debug": {"//command_line_option:compilation_mode": "dbg"},
        "Release": {"//command_line_option:compilation_mode": "opt"}
    },
    top_level_targets = [
        top_level_target(
            "App",
            target_environments = [
                "simulator",
                "device",
            ],
        ),
        top_level_target(
            "//render-test/ios:RenderTest",
            target_environments = [
                "simulator",
                "device",
            ],
        ),
        "//platform/ios/test:ios_test",
        "//platform/ios/iosapp-UITests:uitest",
    ],
)
